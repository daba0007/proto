// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common/common.proto

It has these top-level messages:
	BaseRet
	PageInfo
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Retcode int32

const (
	Retcode_UNKNOWN_RETCODE Retcode = 0
	Retcode_OK              Retcode = 200
	Retcode_BadRequest      Retcode = 400
)

var Retcode_name = map[int32]string{
	0:   "UNKNOWN_RETCODE",
	200: "OK",
	400: "BadRequest",
}
var Retcode_value = map[string]int32{
	"UNKNOWN_RETCODE": 0,
	"OK":              200,
	"BadRequest":      400,
}

func (x Retcode) String() string {
	return proto.EnumName(Retcode_name, int32(x))
}
func (Retcode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type BaseRet struct {
	Retcode Retcode `protobuf:"varint,10,opt,name=retcode,enum=common.Retcode" json:"retcode,omitempty"`
	Message string  `protobuf:"bytes,20,opt,name=message" json:"message,omitempty"`
}

func (m *BaseRet) Reset()                    { *m = BaseRet{} }
func (m *BaseRet) String() string            { return proto.CompactTextString(m) }
func (*BaseRet) ProtoMessage()               {}
func (*BaseRet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BaseRet) GetRetcode() Retcode {
	if m != nil {
		return m.Retcode
	}
	return Retcode_UNKNOWN_RETCODE
}

func (m *BaseRet) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PageInfo struct {
	Num     int32 `protobuf:"varint,10,opt,name=num" json:"num,omitempty"`
	Count   int32 `protobuf:"varint,20,opt,name=count" json:"count,omitempty"`
	Size    int32 `protobuf:"varint,30,opt,name=size" json:"size,omitempty"`
	Total   int32 `protobuf:"varint,40,opt,name=total" json:"total,omitempty"`
	AllPage int32 `protobuf:"varint,50,opt,name=allPage" json:"allPage,omitempty"`
}

func (m *PageInfo) Reset()                    { *m = PageInfo{} }
func (m *PageInfo) String() string            { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()               {}
func (*PageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PageInfo) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *PageInfo) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PageInfo) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *PageInfo) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PageInfo) GetAllPage() int32 {
	if m != nil {
		return m.AllPage
	}
	return 0
}

func init() {
	proto.RegisterType((*BaseRet)(nil), "common.BaseRet")
	proto.RegisterType((*PageInfo)(nil), "common.PageInfo")
	proto.RegisterEnum("common.Retcode", Retcode_name, Retcode_value)
}

func init() { proto.RegisterFile("common/common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x09, 0x25, 0x0d, 0xdc, 0x40, 0x22, 0xb7, 0x83, 0x59, 0x50, 0xd5, 0x29, 0x20, 0x35,
	0x11, 0x65, 0x61, 0x0e, 0x64, 0x40, 0x95, 0x12, 0x64, 0x81, 0x90, 0x58, 0x90, 0x9b, 0x1c, 0xa1,
	0x6a, 0x12, 0x43, 0xed, 0x54, 0x2a, 0x4f, 0xc1, 0x63, 0xf1, 0x58, 0xc8, 0x76, 0x32, 0xf9, 0xbe,
	0xdf, 0xff, 0xf9, 0x7c, 0x3f, 0x4c, 0x0a, 0xd1, 0x34, 0xa2, 0x8d, 0xed, 0x11, 0x7d, 0xed, 0x84,
	0x12, 0x64, 0x6c, 0x69, 0x9e, 0x81, 0x97, 0x70, 0x89, 0x0c, 0x15, 0xb9, 0x02, 0x6f, 0x87, 0xaa,
	0x10, 0x25, 0x52, 0x98, 0x39, 0xe1, 0xf9, 0xd2, 0x8f, 0xfa, 0x16, 0x66, 0x65, 0x36, 0xdc, 0x13,
	0x0a, 0x5e, 0x83, 0x52, 0xf2, 0x0a, 0xe9, 0x74, 0xe6, 0x84, 0x67, 0x6c, 0xc0, 0xf9, 0x1e, 0x4e,
	0x9f, 0x78, 0x85, 0x8f, 0xed, 0x87, 0x20, 0x01, 0x8c, 0xda, 0xae, 0x31, 0x8f, 0xb9, 0x4c, 0x97,
	0x64, 0x0a, 0x6e, 0x21, 0xba, 0x56, 0x99, 0x2e, 0x97, 0x59, 0x20, 0x04, 0x4e, 0xe4, 0xe6, 0x07,
	0xe9, 0xa5, 0x11, 0x4d, 0xad, 0x9d, 0x4a, 0x28, 0x5e, 0xd3, 0xd0, 0x3a, 0x0d, 0xe8, 0xb9, 0xbc,
	0xae, 0xf5, 0x00, 0xba, 0x34, 0xfa, 0x80, 0xd7, 0x77, 0xe0, 0xf5, 0xbf, 0x24, 0x13, 0xf0, 0x5f,
	0xb2, 0x55, 0x96, 0xbf, 0x66, 0xef, 0x2c, 0x7d, 0xbe, 0xcf, 0x1f, 0xd2, 0xe0, 0x88, 0x78, 0x70,
	0x9c, 0xaf, 0x82, 0x3f, 0x87, 0xf8, 0x00, 0x09, 0x2f, 0x19, 0x7e, 0x77, 0x28, 0x55, 0xf0, 0x3b,
	0x4a, 0x52, 0xb8, 0x68, 0x51, 0x45, 0x72, 0x7b, 0x28, 0x6a, 0xd1, 0x95, 0x36, 0x9f, 0x7e, 0xf3,
	0xb7, 0xb0, 0xda, 0xa8, 0xcf, 0x6e, 0xad, 0x31, 0x96, 0xdb, 0xc3, 0xc2, 0x58, 0x16, 0x0a, 0x8b,
	0xd8, 0xd8, 0xe2, 0xfd, 0x4d, 0x1f, 0xeb, 0x7a, 0x6c, 0x84, 0xdb, 0xff, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x09, 0xba, 0x0d, 0xa5, 0x6e, 0x01, 0x00, 0x00,
}
